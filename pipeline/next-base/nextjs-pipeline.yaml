apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: nextjs-pipeline
spec:
  description: |
    cat-branch-readme takes a git repository and a branch name and
    prints the README.md file from that branch. This is an example
    Pipeline demonstrating the following:
      - Using the git-clone catalog Task to clone a branch
      - Passing a cloned repo to subsequent Tasks using a Workspace.
      - Ordering Tasks in a Pipeline using "runAfter" so that
        git-clone completes before we try to read from the Workspace.
      - Using a volumeClaimTemplate Volume as a Workspace.
      - Avoiding hard-coded paths by using a Workspace's path
        variable instead.
  params:
    - name: app-name
      type: string
      description: Application name
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: branch-name
      type: string
      description: The git branch to clone.
    - name: image-repo
      type: string
      description: Docker image repository
  workspaces:
    - name: shared-data
      description: |
        This workspace will receive the cloned git repo and be passed
        to the next Task for the repo's README.md file to be read.
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)  
    - name: run-tests
      workspaces:
        - name: source
          workspace: shared-data
      taskRef: 
        name: npm
      params:
        - name: ARGS
          value:
            - test
      runAfter:
        - clone-repo
    - name: build-and-push-image
      runAfter:
        - run-tests
      taskRef:
        kind: ClusterTask
        name: buildah
      params:
        - name: IMAGE
          value: "$(params.image-repo):$(tasks.clone-repo.results.commit)"
      workspaces:
        - name: source
          workspace: shared-data
    - name: create-envorinment-config
      runAfter:
        - build-and-push-image
      taskRef:
        name: kustomize
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: app-namespace
          value: "$(context.pipelineRun.namespace)"
        - name: source-repo
          value: "$(params.repo-url)"
        - name: commit
          value: "$(tasks.clone-repo.results.commit)"
        - name: image-repo
          value: "$(params.image-repo)"
      workspaces:
        - name: source
          workspace: shared-data
    - name: try-to-deploy
      runAfter:
        - create-envorinment-config
      taskRef:
        name: try-to-deploy
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: app-namespace
          value: "$(context.pipelineRun.namespace)"
      workspaces:
        - name: source
          workspace: shared-data
    - name: update-prod-config
      runAfter:
        - try-to-deploy
      taskRef:
        name: commit-manifest
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: sha
          value: "$(tasks.clone-repo.results.commit)"
      workspaces:
        - name: source
          workspace: shared-data